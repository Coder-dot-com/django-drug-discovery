
-calculate molecules values based on specific descriptors (see email)


-create user functionality sign up login and register
-create user dashboard of reports etc...

incorporate fitlers on generated molecules page e.g. synthesisability 




-user checks recieves notification via email once the model is ready and has been trained

-add in ai credits functionality



-reenable django security settings before dploying to production and go through checklist
    --change tasks.py to use correct epoch settings



-(later)ability to optimize for various filter e.g. user chooses  target SA score default is 5 or less

-later store target_data csv in private s3 bucket and download to server as required then delete for now use public bucket as data is publically available

-(later)create private s3 bucket and store checkpoints there with url stored in db
-create new app and ml models to look for off target effects




-(later need better data)calculate/predict toxicity/train models for this


-Later summary as a side panel with ability to click previous questions and edit on target selection flow

to do later
    # effect_prediction_model =  models.FileField...
    #predicted_effect units = models.Charfield..


-limit input smiles length on user uplaod/input to 500 characters each and display error if over the imit



-file deletion after period of time (1 day? delete the model and files) cron job (later)
-(Later) disable form field if user uploads a file

-add limit of 1k molecules check length on backend if over 1k then return relevant message


-separate out dependencies for reinvent and django in requirements.txt (later) so can split app up 




-iterate and improve site and features/functionality


-create first model based on interest/popularity

-plan more functionality and features



-later----------

-remember to push url e.g. when a report is generated so user can press back button to access it if they clcik off it (after user functionality has been added)


-(later once access to more data review) calculate predicted value if user selects a target
    -on save of a target train model on save (checkbox triggered)
    -calls celery function to train model and store in s3(can be public bucket for now)





