Create reports functionality
    -Add ability to add molecules to report
    -render molecules added to report
    -remove molecules from report

    -Add buttons on list view of report 

    -report page similar to molecules page 
        three options
        Export to pdf
        Export to csv
        Add displayed molecules to another report
        -remove from this report option on molcules and also add to another report option


-where rendering targets and molecules use forloop.counter instead of target id to avoid sequential values

-add more targets and ability to search for and filter targets
-ability to suggest a new target a button

-later tooltips on buttons explaining what they do on molecule page and export page

-addability to create reports and change their visibity
    -features to include in report
    -export to csv button
    -export to pdf button
    -molecules in report

-(later) add tooltip to lipinskis descriptors change add a badge pass or fail based on violations( add log p to physicochemical proeprties)

-add in site buttons css
-add infinite scroll with htmx


-if error occurs during generation then set gen request as type error and return error
-investigate error/prevent users from uploading only 1 compound (minimum compounds is 10 and ensure they are unique)

-(later on summary) dont include duplicate molecules in molecule count

-change status to instead of boolean to choices of in progress gompleted and failed


-ability to save as reports molecules that have been filtered, view reports and download/export as csv, pdf etc..

-user checks recieves notification via email once the model is ready and has been trained

-add in ai credits functionality


-(later as need to setup smtp)  add in reset pass and email validation functionality (emails functionality and app) 



-reenable django security settings before dploying to production and go through checklist
    --change tasks.py to use correct epoch settings



-(later)ability to optimize for various filter e.g. user chooses  target SA score default is 5 or less

-later store target_data csv in private s3 bucket and download to server as required then delete for now use public bucket as data is publically available

-(later)create private s3 bucket and store checkpoints there with url stored in db
-create new app and ml models to look for off target effects




-(later need better data)calculate/predict toxicity/train models for this


-Later summary as a side panel with ability to click previous questions and edit on target selection flow

to do later
    # effect_prediction_model =  models.FileField...
    #predicted_effect units = models.Charfield..


-limit input smiles length on user uplaod/input to 500 characters each and display error if over the imit



-file deletion after period of time (1 day? delete the model and files) cron job (later)
-(Later) disable form field if user uploads a file

-add limit of 1k molecules check length on backend if over 1k then return relevant message


-separate out dependencies for reinvent and django in requirements.txt (later) so can split app up 




-iterate and improve site and features/functionality


-plan more functionality and features







-(later once access to more data review) calculate predicted value if user selects a target
    -on save of a target train model on save (checkbox triggered)
    -calls celery function to train model and store in s3(can be public bucket for now)





